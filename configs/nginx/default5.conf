
# https://github.com/SocialEngine/docker-nginx-spa
# http://www.cicoria.com/forcing-tls-https-on-azure-web-apps-for-linux/
# https://github.com/GaryB432/angular-pwa/blob/master/nginx.conf

charset utf-8;

tcp_nopush on;
tcp_nodelay off;
client_header_timeout 10s;
client_body_timeout 10s;
client_max_body_size 128k;
reset_timedout_connection on;

gzip on;
gzip_types
 text/css

    text/javascript

    text/xml

    text/plain

    application/javascript

    application/x-javascript

    application/json

    application/xml

    application/rss+xml

    application/atom+xml

    font/truetype

    font/opentype

    image/svg+xml;

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    index index.html;
    root /app;
    sendfile off;
    error_log stderr debug;

    # https://tomasz.janczuk.org/2013/12/secure-by-default-with-ssl-in-windows.html
    # if ($http_x_arr_ssl = "") {
    #   return 301 https://$host$request_uri;
    # }

    location / {
        try_files $uri$args $uri$args/ /index.html;
    }

    location /graphql/ {
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_pass https://backend-graphql.web.1;
        # https://stackoverflow.com/questions/5834025/how-to-preserve-request-url-with-nginx-proxy-pass
        # keep header I think the proxy_set_header directive could help:
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-NginX-Proxy true;
        # proxy_pass http://backend-graphql.web.1;
        # proxy_redirect off;
        # proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://backend-graphql.web.1;
        proxy_redirect off;
        proxy_set_header Host $host;

        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_set_header Host $http_host;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header X-Forwarded-For $remote_addr;
        # proxy_set_header X-Forwarded-Port $server_port;
        # proxy_set_header X-Request-Start $msec;

        # proxy_set_header 'Access-Control-Max-Age' 1728000;
        # proxy_set_header 'Access-Control-Allow-Origin' '*';
        # proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        # proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        # proxy_set_header 'Access-Control-Allow-Headers'
        #     'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    }

    location = /index.html {
        if ($http_x_debug) {
            add_header X-debug-request "$request";
            add_header X-debug-host "$host";
            add_header X-debug-args "$args";
            add_header X-debug-uri "$uri";
            add_header X-debug-301 "https://$host$request_uri";
            add_header X-debug-arr-ssl "$http_x_arr_ssl";
            add_header X-debug-port "$remote_port";
            add_header X-debug-scheme "$scheme";
        }







































































































































        # no try_files here
    }

    # This block will catch static file requests, such as images, css, js
    # The ?: prefix is a 'non-capturing' mark, meaning we do not require
    # the pattern to be captured into $1 which should help improve performance
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        # Some basic cache-control for static files to be sent to the browser
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

}